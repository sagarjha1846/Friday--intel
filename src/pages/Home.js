import React, { useState } from 'react';
// import { Helmet } from 'react-helmet';
import { useNavigate } from 'react-router-dom';
import constants from '../constant/routesConstant';
import '../css/home.css';
import { Form } from 'antd';
import ModalView from '../components/Modal';
// import img from '../images/case-card.png'

const Home = ({ caseName, setCaseName }) => {
  const [form] = Form.useForm();
  const [openModal, setOpenModal] = useState(false);
  const { ROUTES } = constants;
  const navigate = useNavigate();

  const handleLoadNewCase = () => {
    setOpenModal(true);
  };

  return (
    <div>
      {/* <Helmet>
        <title>FridayIntel-Home</title>
      </Helmet> */}

      <ModalView
        setOpenModal={setOpenModal}
        openModal={openModal}
        form={form}
        caseName={caseName}
        setCaseName={setCaseName}
      />
      <section className="cases">
        <article className="case_cards" onClick={handleLoadNewCase}>
          {/* <img src={img} alt='img' className='hover-img'/> */}
          <h2 className="case_title_home">New Case</h2>
          <Arrow />
        </article>
        <article
          className="case_cards"
          onClick={() => navigate(ROUTES.loadCase)}
        >
          <h2 className="case_title_home">Load Case</h2>
          <Arrow />
        </article>
        <article
          className="case_cards"
          onClick={() => navigate(ROUTES.readCase)}
        >
          <h2 className="case_title_home">Read Case</h2>
          <Arrow />
        </article>
      </section>
    </div>
  );
};

export default Home;

export const CloseIcon = () => {
  return (
    <svg
      class="vector"
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M13.6206 7.46729C13.7648 7.32303 13.8462 7.12709 13.8462 6.92308C13.8462 6.71906 13.7651 6.52341 13.6209 6.37915L13.6142 6.37259C13.4706 6.23262 13.2775 6.15385 13.0769 6.15385C12.8729 6.15385 12.6773 6.23489 12.533 6.37915L10 8.91214L7.46701 6.37915C7.32275 6.23489 7.12709 6.15385 6.92308 6.15385C6.71906 6.15385 6.52341 6.23489 6.37915 6.37915C6.23489 6.52341 6.15385 6.71906 6.15385 6.92308C6.15385 7.12709 6.23489 7.32275 6.37915 7.46701L8.91214 10L6.37944 12.5327C6.23518 12.677 6.15385 12.8729 6.15385 13.0769C6.15385 13.0785 6.15385 13.08 6.15386 13.0815C6.15392 13.0923 6.15422 13.1031 6.15473 13.1139C6.16392 13.3049 6.24393 13.4856 6.37915 13.6209C6.52341 13.7651 6.71906 13.8462 6.92308 13.8462C7.12709 13.8462 7.32275 13.7651 7.46701 13.6209L10 11.0879L12.533 13.6209C12.6773 13.7651 12.8729 13.8462 13.0769 13.8462C13.2809 13.8462 13.4766 13.7651 13.6209 13.6209C13.7651 13.4766 13.8462 13.2809 13.8462 13.0769C13.8462 12.8729 13.7651 12.6773 13.6209 12.533L11.0879 10L13.6206 7.46729Z"
        fill="#1C1C1C"
      />
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M10 0C10 0 12.034 0 13.8927 0.786165C13.8927 0.786165 15.6874 1.54526 17.0711 2.92893C17.0711 2.92893 18.4547 4.3126 19.2138 6.10731C19.2138 6.10731 20 7.96602 20 10C20 10 20 12.034 19.2138 13.8927C19.2138 13.8927 18.4547 15.6874 17.0711 17.0711C17.0711 17.0711 15.6874 18.4547 13.8927 19.2138C13.8927 19.2138 12.034 20 10 20C10 20 7.96602 20 6.10731 19.2138C6.10731 19.2138 4.3126 18.4547 2.92893 17.0711C2.92893 17.0711 1.54526 15.6874 0.786166 13.8927C0.786166 13.8927 0 12.034 0 10C0 10 0 7.96602 0.786166 6.10731C0.786166 6.10731 1.54527 4.3126 2.92893 2.92893C2.92893 2.92893 4.3126 1.54526 6.10731 0.786165C6.10731 0.786165 7.96602 0 10 0ZM10 1.53846C10 1.53846 8.278 1.53846 6.70662 2.20309C6.70662 2.20309 5.18828 2.8453 4.01679 4.01679C4.01679 4.01679 2.8453 5.18827 2.2031 6.70662C2.2031 6.70662 1.53846 8.27799 1.53846 10C1.53846 10 1.53846 11.722 2.2031 13.2934C2.2031 13.2934 2.8453 14.8117 4.01679 15.9832C4.01679 15.9832 5.18828 17.1547 6.70662 17.7969C6.70662 17.7969 8.278 18.4615 10 18.4615C10 18.4615 11.722 18.4615 13.2934 17.7969C13.2934 17.7969 14.8117 17.1547 15.9832 15.9832C15.9832 15.9832 17.1547 14.8117 17.7969 13.2934C17.7969 13.2934 18.4615 11.722 18.4615 10C18.4615 10 18.4615 8.278 17.7969 6.70662C17.7969 6.70662 17.1547 5.18827 15.9832 4.01679C15.9832 4.01679 14.8117 2.8453 13.2934 2.2031C13.2934 2.2031 11.722 1.53846 10 1.53846Z"
        fill="#1C1C1C"
      />
    </svg>
  );
};
export const Arrow = () => {
  return (
    <div className="case_arrow">
      <svg
        className="case_arrow"
        width="40"
        height="40"
        viewBox="0 0 40 40"
        fill="white"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          fillRule="evenodd"
          clipRule="evenodd"
          d="M20 0.5C20 0.5 23.9663 0.5 27.5907 2.03302C27.5907 2.03302 31.0904 3.51327 33.7886 6.21142C33.7886 6.21142 36.4867 8.90957 37.967 12.4093C37.967 12.4093 39.5 16.0337 39.5 20C39.5 20 39.5 23.9663 37.967 27.5907C37.967 27.5907 36.4867 31.0904 33.7886 33.7886C33.7886 33.7886 31.0904 36.4867 27.5907 37.967C27.5907 37.967 23.9663 39.5 20 39.5C20 39.5 16.0337 39.5 12.4093 37.967C12.4093 37.967 8.90957 36.4867 6.21142 33.7886C6.21142 33.7886 3.51326 31.0904 2.03302 27.5907C2.03302 27.5907 0.5 23.9663 0.5 20C0.5 20 0.5 16.0337 2.03302 12.4093C2.03302 12.4093 3.51327 8.90957 6.21142 6.21142C6.21142 6.21142 8.90957 3.51327 12.4093 2.03302C12.4093 2.03302 16.0337 0.5 20 0.5ZM20 3.5C20 3.5 16.6421 3.5 13.5779 4.79603C13.5779 4.79603 10.6171 6.04834 8.33274 8.33274C8.33274 8.33274 6.04834 10.6171 4.79604 13.5779C4.79604 13.5779 3.5 16.6421 3.5 20C3.5 20 3.5 23.3579 4.79604 26.4221C4.79604 26.4221 6.04834 29.3829 8.33274 31.6673C8.33274 31.6673 10.6171 33.9517 13.5779 35.204C13.5779 35.204 16.6421 36.5 20 36.5C20 36.5 23.3579 36.5 26.4221 35.204C26.4221 35.204 29.3829 33.9517 31.6673 31.6673C31.6673 31.6673 33.9517 29.3829 35.204 26.4221C35.204 26.4221 36.5 23.3579 36.5 20C36.5 20 36.5 16.6421 35.204 13.5779C35.204 13.5779 33.9517 10.6171 31.6673 8.33274C31.6673 8.33274 29.3829 6.04834 26.4221 4.79604C26.4221 4.79604 23.3579 3.5 20 3.5Z"
          fill="#1C1C1C"
        />
        <path
          d="M22.2043 12.583C21.923 12.3017 21.5415 12.1437 21.1437 12.1437C20.7459 12.1437 20.3643 12.3017 20.083 12.583C19.8017 12.8643 19.6437 13.2459 19.6437 13.6437C19.6437 14.0415 19.8017 14.423 20.083 14.7043L25.3786 19.9999L20.0836 25.295C19.8023 25.5763 19.6437 25.9584 19.6437 26.3562C19.6437 26.754 19.8017 27.1355 20.083 27.4168C20.3643 27.6981 20.7459 27.8562 21.1437 27.8562C21.5415 27.8562 21.923 27.6981 22.2043 27.4168L28.5606 21.0606C29.1464 20.4748 29.1464 19.5251 28.5606 18.9393L22.2043 12.583ZM12.5 21.5H27.5C28.3284 21.5 29 20.8284 29 20C29 19.1716 28.3284 18.5 27.5 18.5H12.5C11.6716 18.5 11 19.1716 11 20C11 20.8284 11.6716 21.5 12.5 21.5Z"
          fill="#1C1C1C"
        />
      </svg>
    </div>
  );
};
